datasource db {
   provider = "postgresql"
   url      = env("DATABASE_URL")
}

generator client {
   provider = "prisma-client-js"
}

generator typegraphql {
   provider = "typegraphql-prisma"
   output   = "../src/type-graphql-gen"
}

/// Individual user
model User {
   /// User's ID
   id       String    @id @default(cuid())
   /// User's email address (unique)
   email    String    @unique
   /// User's nickname or preferred name
   name     String
   /// User's password (hashed with Argon2i)
   /// @TypeGraphQL.omit(output: true)
   password String
   /// List of all messages a user has sent
   messages Message[]
   /// List of all groups a user is part of
   groups   Group[]
   /// Refresh token invalidation
   /// @TypeGraphQL.omit(output: true)
   count    Int       @default(0)
}

/// Overarching message model
model Message {
   /// Message ID
   id        String   @id @default(cuid())
   /// Message content
   text      String
   /// Group in which the message was sent
   group     Group    @relation(fields: [groupId], references: [id])
   /// Unique group identifier
   groupId   String
   /// User who sent the message
   user      User     @relation(fields: [userId], references: [id])
   /// Unique user identifier
   userId    String
   /// Time at which message was sent
   timestamp DateTime @default(now())
}

/// Overarching group model
model Group {
   /// Group ID
   id       String    @id @default(cuid())
   /// Group name
   name     String
   /// Users within the group
   users    User[]
   /// Messages sent within the group
   messages Message[]
   /// Group join password
   /// @TypeGraphQL.omit(output: true)
   password String
}
